{"version":3,"sources":["components/ShoppingCart/ShoppingCart.jsx","components/List/List.jsx","components/PhoneCard/PhoneCard.jsx","logo.svg","App.js","fetches.js","reportWebVitals.js","index.js"],"names":["ShoppingCart","content","map","phone","name","id","List","phones","searchRequest","sortFlow","addToShoppingCart","setChosenPhone","useState","phonesToShow","setPhonesToShow","useEffect","filter","toLowerCase","includes","sort","a","b","sortByType","className","href","onClick","alt","src","imageUrl","snippet","PhoneCard","chosenPhone","phoneDetailes","images","type","description","img","availability","battery","talkTime","standbyTime","storage","ram","flash","connectivity","cell","wifi","bluetooth","infrared","gps","android","os","ui","sizeAndWeight","dimensions","det","weight","display","screenResolution","touchScreen","hardware","cpu","usb","audioJack","fmRadio","accelerometer","camera","primary","features","f","additionalFeatures","App","setPhones","setSearchRequest","setSortFlow","shoppingCartContent","setShoppingCartContent","setPhoneDetailes","newPhone","phoneId","fetch","then","promise","json","detailes","value","onChange","event","target","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f08d7b0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ShoppingCart = ({ content }) => {\n\n  return (\n    <ul>\n      {content.map(phone => (\n        <li key={phone.id}>\n          {phone.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport const List = ({\n  phones,\n  searchRequest,\n  sortFlow,\n  addToShoppingCart,\n  setChosenPhone,\n}) => {\n  const [phonesToShow, setPhonesToShow] = useState(phones);\n\n  useEffect(() => {\n    setPhonesToShow(\n      phones.filter(\n        phone => phone.name.toLowerCase().includes(searchRequest.toLowerCase())\n      )\n      .sort((a, b) => sortByType(a,b))\n    )\n  }, [phones, searchRequest, sortFlow]);\n\n  function sortByType(a, b) {\n    if (typeof(a[sortFlow]) === 'number') {\n      return a[sortFlow] - b[sortFlow];\n    } else {\n      return a[sortFlow].toLowerCase() > b[sortFlow].toLowerCase() ? 1 : -1;\n    }\n  };\n\n  return (\n    <ul className=\"phones\">\n      {phonesToShow.map(phone => (\n        <li\n          className=\"thumbnail\"\n          key={phone.id}\n        >\n          <a\n            href={`#!/phones/${phone.id}`}\n            className=\"thumb\"\n            onClick={() => setChosenPhone(phone)}\n          >\n            <img alt={phone.id} src={phone.imageUrl} />\n          </a>\n\n          <div className=\"phones__btn-buy-wrapper\">\n            <a\n              className=\"btn btn-success\"\n              href=\"#buy\"\n              onClick={() => addToShoppingCart(phone)}\n            >\n              Add\n            </a>\n          </div>\n\n          <a\n            href=\"#!/phones/motorola-xoom-with-wi-fi\"\n            onClick={() => setChosenPhone(phone)}\n          >\n            {phone.name}\n          </a>\n          <p>\n            {phone.snippet}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport const PhoneCard = ({\n  chosenPhone,\n  setChosenPhone,\n  addToShoppingCart,\n  phoneDetailes,\n}) => {\n\n  const partsToShow = ['availability', 'battery', 'storage', 'connectivity', 'android', 'sizeAndWeight', 'display', 'hardware', 'camera', 'additionalFeatures'];\n\n  return (\n    <div className=\"container-fluid\">\n      {phoneDetailes && (\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <img\n              className=\"phone\"\n              src={phoneDetailes.images[0]}\n              alt={phoneDetailes.name}\n            />\n\n            <button\n              type=\"button\"\n              onClick={() => setChosenPhone(null)}\n            >\n              Back\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => addToShoppingCart(chosenPhone)}\n            >\n              Add to basket\n            </button>\n\n            <h1>{phoneDetailes.name}</h1>\n\n            <p>{phoneDetailes.description}</p>\n\n            <ul className=\"phone-thumbs\">\n\n              {phoneDetailes.images.map(img => (\n                <img\n                  key={`${phoneDetailes.id}` + `${img}`}\n                  alt={phoneDetailes.id}\n                  src={`${img}`}\n                />\n              ))}\n            </ul>\n\n            <ul className=\"specs\">\n\n            <li>\n              <span>Availability and Networks</span>\n              <dl>\n                <dt>Availability</dt>\n                <dd>{phoneDetailes.availability[0]}</dd>\n              </dl>\n            </li>\n\n            <li>\n              <span>Battery</span>\n              <dl>\n                <dt>Type</dt>\n                <dd>{phoneDetailes.battery.type}</dd>\n                <dt>Talk Time</dt>\n                <dd>{phoneDetailes.battery.talkTime}</dd>\n                <dt>Standby time (max)</dt>\n                <dd>{phoneDetailes.battery.standbyTime}</dd>\n              </dl>\n            </li>\n\n              <li>\n                <span>Storage and Memory</span>\n                <dl>\n                  <dt>RAM</dt>\n                  <dd>{phoneDetailes.storage.ram}</dd>\n                  <dt>Internal Storage</dt>\n                  <dd>{phoneDetailes.storage.flash}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Connectivity</span>\n                <dl>\n                  <dt>Network Support</dt>\n                  <dd>{phoneDetailes.connectivity.cell}</dd>\n                  <dt>WiFi</dt>\n                  <dd>{phoneDetailes.connectivity.wifi}</dd>\n                  <dt>Bluetooth</dt>\n                  <dd>{phoneDetailes.connectivity.bluetooth}</dd>\n                  <dt>Infrared</dt>\n                  <dd>{phoneDetailes.connectivity.infrared ? '+' : '-'}</dd>\n                  <dt>GPS</dt>\n                  <dd>{phoneDetailes.connectivity.gps ? '+' : '-'}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Android</span>\n                <dl>\n                  <dt>OS Version</dt>\n                  <dd>{phoneDetailes.android.os}</dd>\n                  <dt>UI</dt>\n                  <dd>{phoneDetailes.android.ui}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Size and Weight</span>\n                <dl>\n                  <dt>Dimensions</dt>\n                    {phoneDetailes.sizeAndWeight.dimensions.map(det => (\n                      <dd>{det}</dd>\n                    ))}\n                  <dt>Weight</dt>\n                  <dd>{phoneDetailes.sizeAndWeight.weight}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Display</span>\n                <dl>\n                  <dt>Screen size</dt>\n                  <dd>{phoneDetailes.display.screenResolution}</dd>\n                  <dt>Screen resolution</dt>\n                  <dd>{phoneDetailes.display.screenResolution}</dd>\n                  <dt>Touch screen</dt>\n                  <dd>{phoneDetailes.display.touchScreen ? '+' : '-'}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Hardware</span>\n                <dl>\n                  <dt>CPU</dt>\n                  <dd>{phoneDetailes.hardware.cpu}</dd>\n                  <dt>USB</dt>\n                  <dd>{phoneDetailes.hardware.usb}</dd>\n                  <dt>Audio / headphone jack</dt>\n                  <dd>{phoneDetailes.hardware.audioJack}</dd>\n                  <dt>FM Radio</dt>\n                  <dd>{phoneDetailes.hardware.fmRadio ? '+' : '-'}</dd>\n                  <dt>Accelerometer</dt>\n                  <dd>{phoneDetailes.hardware.accelerometer ? '+' : '-'}</dd>\n                </dl>\n              </li>\n\n              <li>\n                <span>Camera</span>\n                <dl>\n                  <dt>Primary</dt>\n                  <dd>{phoneDetailes.camera.primary}</dd>\n                  <dt>Features</dt>\n                  {phoneDetailes.camera.features.map(f => (\n                    <dd>{f}</dd>\n                  ))}\n                </dl>\n              </li>\n\n              <li>\n                <span>Additional Features</span>\n                <dd>{phoneDetailes.additionalFeatures}</dd>\n              </li>\n\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport { getPhones } from './fetches';\nimport { ShoppingCart } from './components/ShoppingCart/ShoppingCart';\nimport { List } from './components/List/List';\nimport { PhoneCard } from './components/PhoneCard/PhoneCard';\nimport { getPhoneDetailes } from './fetches';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [phones, setPhones] = useState([]);\n  const [searchRequest, setSearchRequest] = useState('');\n  const [sortFlow, setSortFlow] = useState('name');\n  const [shoppingCartContent, setShoppingCartContent] = useState([]);\n  const [chosenPhone, setChosenPhone] = useState(null);\n  const [phoneDetailes, setPhoneDetailes] = useState(null);\n\n  useEffect(() => {\n    if (chosenPhone) {\n      getPhoneDetailes(chosenPhone.id)\n        .then(detailes => setPhoneDetailes(detailes))\n    }\n  }, [chosenPhone]);\n\n  useEffect(() => {\n    getPhones().then(phones => setPhones(phones))\n  }, []);\n\n  function addToShoppingCart(newPhone) {\n    setShoppingCartContent([\n      ...shoppingCartContent,\n      newPhone,\n    ])\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n\n        <div className=\"col-md-2\">\n\n          <section>\n            <p>\n              Search:\n              {' '}\n              <input\n                type=\"text\"\n                value={searchRequest}\n                onChange={\n                  (event) => setSearchRequest(event.target.value)\n                }\n              />\n            </p>\n\n            <p>\n              Sort by:\n              {' '}\n              <select\n                onChange={(event) => setSortFlow(event.target.value)}\n              >\n                <option value=\"name\">Alphabetical</option>\n                <option value=\"age\">Newest</option>\n              </select>\n            </p>\n          </section>\n\n          <section>\n            <p>Shopping Cart:</p>\n            {shoppingCartContent.length === 0\n              ? <p>-empty yet-</p>\n              : <ShoppingCart\n                content={shoppingCartContent}\n                setChosenPhone={setChosenPhone}\n              />\n            }\n            <button\n              type='button'\n              onClick={() => setShoppingCartContent([])}\n            >\n              Clear Shopping Cart\n            </button>\n          </section>\n\n        </div>\n\n        <div className=\"col-md-10\">\n          {!chosenPhone\n            ? (\n              <ul className=\"phones\">\n                <List\n                  phones={phones}\n                  searchRequest={searchRequest}\n                  sortFlow={sortFlow}\n                  addToShoppingCart={addToShoppingCart}\n                  setChosenPhone={setChosenPhone}\n                />\n              </ul>\n            )\n            : <PhoneCard\n              chosenPhone={chosenPhone}\n              setChosenPhone={setChosenPhone}\n              addToShoppingCart={addToShoppingCart}\n              phoneDetailes={phoneDetailes}\n            />\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nexport function getPhones() {\n  return fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones.json`)\n    .then(promise => promise.json());\n}\n\nexport function getPhoneDetailes(phoneId) {\n  return fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones/${phoneId}.json`)\n    .then(promise => promise.json());\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
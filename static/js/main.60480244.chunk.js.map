{"version":3,"sources":["components/ShoppingCart/ShoppingCart.jsx","components/List/List.jsx","components/PhoneCard/PhoneCard.jsx","logo.svg","App.js","fetches.js","reportWebVitals.js","index.js"],"names":["ShoppingCart","content","map","phone","name","id","List","phones","searchRequest","sortFlow","addToShoppingCart","setPhoneCardContent","useState","phonesToShow","setPhonesToShow","useEffect","filter","toLowerCase","includes","sort","a","b","sortByType","className","href","onClick","alt","src","imageUrl","snippet","PhoneCard","phoneCardContent","type","App","setPhones","setSearchRequest","setSortFlow","shoppingCartContent","setShoppingCartContent","fetch","then","promise","json","value","onChange","event","target","length","newPhone","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60480244.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ShoppingCart = ({ content }) => {\n\n  return (\n    <ul>\n      {content.map(phone => (\n        <li key={phone.id}>\n          {phone.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport const List = ({\n  phones,\n  searchRequest,\n  sortFlow,\n  addToShoppingCart,\n  setPhoneCardContent,\n}) => {\n  const [phonesToShow, setPhonesToShow] = useState(phones);\n\n  useEffect(() => {\n    setPhonesToShow(\n      phones.filter(\n        phone => phone.name.toLowerCase().includes(searchRequest.toLowerCase())\n      )\n      .sort((a, b) => sortByType(a,b))\n    )\n  }, [phones, searchRequest, sortFlow]);\n\n  function sortByType(a, b) {\n    if (typeof(a[sortFlow]) === 'number') {\n      return a[sortFlow] - b[sortFlow];\n    } else {\n      return a[sortFlow].toLowerCase() > b[sortFlow].toLowerCase() ? 1 : -1;\n    }\n  };\n\n  return (\n    <ul className=\"phones\">\n      {phonesToShow.map(phone => (\n        <li\n          className=\"thumbnail\"\n          key={phone.id}\n        >\n          <a\n            href={`#!/phones/${phone.id}`}\n            className=\"thumb\"\n            onClick={() => setPhoneCardContent(phone)}\n          >\n            <img alt={phone.id} src={phone.imageUrl} />\n          </a>\n\n          <div className=\"phones__btn-buy-wrapper\">\n            <a\n              className=\"btn btn-success\"\n              href=\"#buy\"\n              onClick={() => addToShoppingCart(phone)}\n            >\n              Add\n            </a>\n          </div>\n\n          <a\n            href=\"#!/phones/motorola-xoom-with-wi-fi\"\n            onClick={() => setPhoneCardContent(phone)}\n          >\n            {phone.name}\n          </a>\n          <p>\n            {phone.snippet}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport const PhoneCard = ({\n  phoneCardContent,\n  setPhoneCardContent,\n}) => {\n\n  return (\n    <div>\n      <p>THIS IS THE CARD!!!</p>\n      <p>{phoneCardContent.name}</p>\n\n      <button\n        type='button'\n        onClick={() => setPhoneCardContent([])}\n      >\n        BACK\n      </button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport { getPhones } from './fetches';\nimport { ShoppingCart } from './components/ShoppingCart/ShoppingCart';\nimport { List } from './components/List/List';\nimport { PhoneCard } from './components/PhoneCard/PhoneCard';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [phones, setPhones] = useState([]);\n  const [searchRequest, setSearchRequest] = useState('');\n  const [sortFlow, setSortFlow] = useState('name');\n  const [shoppingCartContent, setShoppingCartContent] = useState([]);\n  const [phoneCardContent, setPhoneCardContent] = useState([]);\n\n  useEffect(() => {\n    getPhones().then(phones => setPhones(phones))\n  }, []);\n\n  function addToShoppingCart(newPhone) {\n    setShoppingCartContent([\n      ...shoppingCartContent,\n      newPhone,\n    ])\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n\n        <div className=\"col-md-2\">\n\n          <section>\n            <p>\n              Search:\n              {' '}\n              <input\n                type=\"text\"\n                value={searchRequest}\n                onChange={\n                  (event) => setSearchRequest(event.target.value)\n                }\n              />\n            </p>\n\n            <p>\n              Sort by:\n              {' '}\n              <select\n                onChange={(event) => setSortFlow(event.target.value)}\n              >\n                <option value=\"name\">Alphabetical</option>\n                <option value=\"age\">Newest</option>\n              </select>\n            </p>\n          </section>\n\n          <section>\n            <p>Shopping Cart:</p>\n            {shoppingCartContent.length === 0\n              ? <p>-empty yet-</p>\n              : <ShoppingCart\n                content={shoppingCartContent}\n                setPhoneCardContent={setPhoneCardContent}\n              />\n            }\n            <button\n              type='button'\n              onClick={() => setShoppingCartContent([])}\n            >\n              Clear Shopping Cart\n            </button>\n          </section>\n\n        </div>\n\n        <div className=\"col-md-10\">\n          {phoneCardContent.length === 0 \n            ? (\n              <ul className=\"phones\">\n              <List\n                phones={phones}\n                searchRequest={searchRequest}\n                sortFlow={sortFlow}\n                addToShoppingCart={addToShoppingCart}\n                setPhoneCardContent={setPhoneCardContent}\n              />\n            </ul>)\n            : <PhoneCard\n              phoneCardContent={phoneCardContent}\n              setPhoneCardContent={setPhoneCardContent}\n            />\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nexport function getPhones() {\n  return fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones.json`)\n    .then(promise => promise.json());\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}